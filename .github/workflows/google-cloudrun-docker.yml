name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create service account file
        run: node ./fixjson.js
        env:
          GCP_SA_KEY: ${{ secrets.GCP_NIMBUS_KEY }}

      - name: Validate JSON
        run: |
          jq . ./src/config/serviceAccount.json

      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - name: 'Create env file'
        run: |
          echo PORT=${{ secrets.PORT }} >> .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          echo REDIS_URL=${{ secrets.REDIS_URL }} >> .env
          echo JWT_SECRET_ACCESS=${{ secrets.JWT_SECRET_ACCESS }} >> .env
          echo GMAIL_EMAIL=${{ secrets.GMAIL_EMAIL }} >> .env
          echo GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }} >> .env
          echo ML_ENDPOINT=${{ secrets.ML_ENDPOINT }} >> .env

      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/${{ secrets.SERVICE }}:latest"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

  deploy:
    needs: build
    runs-on: 'ubuntu-latest'

    steps:
      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.SERVICE }} \
            --image ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/${{ secrets.SERVICE }}:latest \
            --platform managed \
            --region asia-southeast2 \
            --allow-unauthenticated
      